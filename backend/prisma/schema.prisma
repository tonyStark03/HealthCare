// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id                   Int           @id @default(autoincrement())
  email                String        @unique
  name                 String
  phone                Int           @unique
  password             String
  city                 String
  // doctor               Doctor?       // Optional relation, if the user is a doctor
  appointmentsMade     Appointment[] @relation("UserAppointments")
  // appointmentsReceived Appointment[] @relation("DoctorAppointments", fields: [id], references: [id])
}

model Doctor {
  id                   Int           @id @default(autoincrement())
  name                 String
  email                String        @unique
  phone                Int           @unique
  // userID               Int           @unique
  // user                 User          @relation(fields: [userID], references: [id])
  city                 String
  field                String
  password             String
  appointmentsReceived Appointment[] @relation("DoctorAppointments")
}

model Appointment {
  id        Int      @id @default(autoincrement())
  date      DateTime
  status    Status   @default(PENDING)
  patientID Int
  doctorID  Int
  patient   User     @relation("UserAppointments", fields: [patientID], references: [id])
  doctor    Doctor   @relation("DoctorAppointments", fields: [doctorID], references: [id])
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
